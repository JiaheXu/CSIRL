# @package _global_

agent:
  name: sac
  _target_: model.sac.SAC
  obs_dim: ??? # to be specified later
  action_dim: ??? # to be specified later

  critic_cfg: ${q_net}
  actor_cfg: ${diag_gaussian_actor}
  rs_cfg: ${intrinsic_reward_net}
  init_temp: 1e-2 # use a low temp for IL

  alpha_lr: 3e-4
  alpha_betas: [0.9, 0.999]

  actor_lr: 3e-4
  actor_betas: [0.9, 0.999]
  actor_update_frequency: 1

  critic_lr: 3e-4
  critic_betas: [0.9, 0.999]
  critic_tau: 0.005
  critic_target_update_frequency: 1

  grad_lr: 0.01
  rs_lr: 0.001
  rs_betas: [0.9, 0.999]
  rs_update_frequency: 1
  # learn temperature coefficient (disabled by default)
  learn_temp: false

  # Use either value_dice actor or normal SAC actor loss
  vdice_actor: false

q_net:
  _target_: model.sac_models.MultiQCritic
  obs_dim: ${agent.obs_dim}
  action_dim: ${agent.action_dim}
  hidden_dim: 256
  hidden_depth: 2
  q_net_num: 5

intrinsic_reward_net:
  _target_: model.sac_models.Intrinsic_Reward_Generator
  input_dim: ${agent.obs_dim}
  hidden_dim: 256
  hidden_depth: 2

diag_gaussian_actor:
  _target_: model.sac_models.DiagGaussianActor
  obs_dim: ${agent.obs_dim}
  action_dim: ${agent.action_dim}
  hidden_dim: 256
  hidden_depth: 2
  log_std_bounds: [-5, 2]